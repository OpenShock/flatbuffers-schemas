include "./Types/ShockerCommandType.fbs";
include "./Types/ShockerModelType.fbs";
include "./Types/SemVer.fbs";

attribute "fs_serializer";

namespace OpenShock.Serialization.Gateway;

table Ping {
  unix_utc_time:ulong;
}

enum TriggerType : uint8 {
  /// Restart the hub
  Restart,

  /// Trigger the emergency stop on the hub, this does however not allow for resending the emergency stop
  EmergencyStop,

  /// Enable the captive portal
  CaptivePortalEnable,

  /// Disable the captive portal
  CaptivePortalDisable,
}

table Trigger {
  type:TriggerType;
}

table ShockerCommand {
  model:Types.ShockerModelType;
  id:uint16;
  type:Types.ShockerCommandType;
  intensity:uint8;
  duration:uint16;
}

table ShockerCommandList {
  commands:[ShockerCommand] (required);
}

table OtaUpdateRequest {
  version:Types.SemVer (required);
}

union GatewayToHubMessagePayload {
  /// Ping message, should immediately be responded to with a pong
  Ping,

  /// Trigger a specific action on the hub
  Trigger,

  /// Send a list of shocker commands to the hub
  ShockerCommandList,

  /// Request an OTA update to be performed
  OtaUpdateRequest
}

table GatewayToHubMessage (fs_serializer) {
  payload:GatewayToHubMessagePayload (required);
}

root_type GatewayToHubMessage;
